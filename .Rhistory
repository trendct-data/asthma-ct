coord_map() +
facet_wrap(~category, ncol=2)
scale_fill_distiller(type="seq", trans="reverse", palette = "Reds", breaks=pretty_breaks(n=10)) +
theme_nothing(legend=TRUE) +
labs(title="Asthma in Connecticut", fill="")
print(tm_ct)
tm_ct <- ggplot() +
geom_polygon(data = total_map2, aes(x=long, y=lat, group=group, fill=n), color = "black", size=0.2) +
geom_polygon(data = town_borders, aes(x=long, y=lat, group=group, fill=total), color = "black", fill=NA, size=0.5) +
coord_map() +
facet_wrap(~category, ncol=2) +
scale_fill_distiller(type="seq", trans="reverse", palette = "Reds", breaks=pretty_breaks(n=10)) +
theme_nothing(legend=TRUE) +
labs(title="Asthma in Connecticut", fill="")
print(tm_ct)
tm_ct <- ggplot() +
geom_polygon(data = total_map2, aes(x=long, y=lat, group=group, fill=n), color = "black", size=0.2) +
geom_polygon(data = townborders, aes(x=long, y=lat, group=group, fill=total), color = "black", fill=NA, size=0.5) +
coord_map() +
facet_wrap(~category, ncol=2) +
scale_fill_distiller(type="seq", trans="reverse", palette = "Reds", breaks=pretty_breaks(n=10)) +
theme_nothing(legend=TRUE) +
labs(title="Asthma in Connecticut", fill="")
print(tm_ct)
tm_ct <- ggplot() +
geom_polygon(data = total_map2, aes(x=long, y=lat, group=group, fill=n), color = "black", size=0.2) +
geom_polygon(data = townborders, aes(x=long, y=lat, group=group, fill=total), color = "black", fill=NA, size=0.5) +
coord_map() +
facet_wrap(~category, ncol=2)
tm_ct
total_map2$n <- as.numeric(total_map2$n)
tm_ct <- ggplot() +
geom_polygon(data = total_map2, aes(x=long, y=lat, group=group, fill=n), color = "black", size=0.2) +
geom_polygon(data = townborders, aes(x=long, y=lat, group=group, fill=total), color = "black", fill=NA, size=0.5) +
coord_map() +
facet_wrap(~category, ncol=2) +
scale_fill_distiller(type="seq", trans="reverse", palette = "Reds", breaks=pretty_breaks(n=10)) +
theme_nothing(legend=TRUE) +
labs(title="Asthma in Connecticut", fill="")
print(tm_ct)
table(total_map2$Town)
View(asthma)
table(asthma$Town)
table(nchar(asthma$Census.Tract))
asthma <- read.csv("https://data.ct.gov/api/views/javn-ujwr/rows.csv?accessType=DOWNLOAD", stringsAsFactors=F)
towntracts <- readOGR(dsn="maps", layer="census_tracts")
# creating a copy
towntracts_only <- towntracts
# turn the shapefile into a dataframe that can be worked on in R
towntracts <- fortify(towntracts, region="GEOID10")
townborders <- readOGR(dsn="maps", layer="ctgeo")
townborders_only <- townborders
townborders<- fortify(townborders, region="NAME10")
#names(asthma)[names(asthma) == 'Census.Tract'] <- 'id'
asthma$id <- ifelse(nchar(asthma$Census.Tract) ==5, paste0("090010", asthma$Census.Tract), paste0("09001", asthma$Census.Tract))
asthma$id <- as.character(asthma$id)
total_map <- left_join(towntracts, asthma)
total_map2 <- gather(total_map, "category", "n", 10:19)
total_map2$n <- as.numeric(total_map2$n)
tm_ct <- ggplot() +
geom_polygon(data = total_map2, aes(x=long, y=lat, group=group, fill=n), color = "black", size=0.2) +
geom_polygon(data = townborders, aes(x=long, y=lat, group=group, fill=total), color = "black", fill=NA, size=0.5) +
coord_map() +
facet_wrap(~category, ncol=2) +
scale_fill_distiller(type="seq", trans="reverse", palette = "Reds", breaks=pretty_breaks(n=10)) +
theme_nothing(legend=TRUE) +
labs(title="Asthma in Connecticut", fill="")
print(tm_ct)
table(total_map2$Town)
View(asthma)
View(towntracts)
asthma <- read.csv("https://data.ct.gov/api/views/javn-ujwr/rows.csv?accessType=DOWNLOAD", stringsAsFactors=F)
towntracts <- readOGR(dsn="maps", layer="census_tracts")
# creating a copy
towntracts_only <- towntracts
# turn the shapefile into a dataframe that can be worked on in R
towntracts <- fortify(towntracts, region="GEOID10")
townborders <- readOGR(dsn="maps", layer="ctgeo")
townborders_only <- townborders
townborders<- fortify(townborders, region="NAME10")
#names(asthma)[names(asthma) == 'Census.Tract'] <- 'id'
asthma$id <- ifelse(nchar(asthma$Census.Tract) ==5, paste0("090010", asthma$Census.Tract), paste0("09009", asthma$Census.Tract))
asthma$id <- as.character(asthma$id)
total_map <- left_join(towntracts, asthma)
total_map2 <- gather(total_map, "category", "n", 10:19)
total_map2$n <- as.numeric(total_map2$n)
tm_ct <- ggplot() +
geom_polygon(data = total_map2, aes(x=long, y=lat, group=group, fill=n), color = "black", size=0.2) +
geom_polygon(data = townborders, aes(x=long, y=lat, group=group, fill=total), color = "black", fill=NA, size=0.5) +
coord_map() +
facet_wrap(~category, ncol=2) +
scale_fill_distiller(type="seq", trans="reverse", palette = "Reds", breaks=pretty_breaks(n=10)) +
theme_nothing(legend=TRUE) +
labs(title="Asthma in Connecticut", fill="")
print(tm_ct)
tracts2towns <- read.csv("data/tracts_to_towns.csv", stringsAsFactors=F)
View(tracts2towns)
tracts2towns$id <- str_sub(tracts2towns$tract, 1,5 )
View(tracts2towns)
colnames(tracts2towns) <- c("id", "town", "tract")
asthma <- read.csv("https://data.ct.gov/api/views/javn-ujwr/rows.csv?accessType=DOWNLOAD", stringsAsFactors=F)
towntracts <- readOGR(dsn="maps", layer="census_tracts")
# creating a copy
towntracts_only <- towntracts
# turn the shapefile into a dataframe that can be worked on in R
towntracts <- fortify(towntracts, region="GEOID10")
townborders <- readOGR(dsn="maps", layer="ctgeo")
townborders_only <- townborders
townborders<- fortify(townborders, region="NAME10")
#names(asthma)[names(asthma) == 'Census.Tract'] <- 'id'
#asthma$id <- ifelse(nchar(asthma$Census.Tract) ==5, paste0("090010", asthma$Census.Tract), paste0("09009", asthma$Census.Tract))
tracts2towns <- read.csv("data/tracts_to_towns.csv", stringsAsFactors=F)
tracts2towns$id <- str_sub(tracts2towns$tract, 1,5 )
colnames(tracts2towns) <- c("id", "town", "Census.Tract")
asthma$id <- as.character(asthma$id)
asthma <- left_join(asthma, tracts2towns)
total_map <- left_join(towntracts, asthma)
total_map2 <- gather(total_map, "category", "n", 10:19)
total_map2$n <- as.numeric(total_map2$n)
tm_ct <- ggplot() +
geom_polygon(data = total_map2, aes(x=long, y=lat, group=group, fill=n), color = "black", size=0.2) +
geom_polygon(data = townborders, aes(x=long, y=lat, group=group, fill=total), color = "black", fill=NA, size=0.5) +
coord_map() +
facet_wrap(~category, ncol=2) +
scale_fill_distiller(type="seq", trans="reverse", palette = "Reds", breaks=pretty_breaks(n=10)) +
theme_nothing(legend=TRUE) +
labs(title="Asthma in Connecticut", fill="")
print(tm_ct)
library(scales)
asthma <- read.csv("https://data.ct.gov/api/views/javn-ujwr/rows.csv?accessType=DOWNLOAD", stringsAsFactors=F)
towntracts <- readOGR(dsn="maps", layer="census_tracts")
# creating a copy
towntracts_only <- towntracts
# turn the shapefile into a dataframe that can be worked on in R
towntracts <- fortify(towntracts, region="GEOID10")
townborders <- readOGR(dsn="maps", layer="ctgeo")
townborders_only <- townborders
townborders<- fortify(townborders, region="NAME10")
#names(asthma)[names(asthma) == 'Census.Tract'] <- 'id'
#asthma$id <- ifelse(nchar(asthma$Census.Tract) ==5, paste0("090010", asthma$Census.Tract), paste0("09009", asthma$Census.Tract))
tracts2towns <- read.csv("data/tracts_to_towns.csv", stringsAsFactors=F)
tracts2towns$id <- str_sub(tracts2towns$tract, 1,5 )
colnames(tracts2towns) <- c("id", "town", "Census.Tract")
asthma$id <- as.character(asthma$id)
View(asthma)
asthma <- left_join(asthma, tracts2towns)
asthma$Census.Tract <- as.character(asthma$Census.Tract)
asthma <- left_join(asthma, tracts2towns)
View(asthma)
View(tracts2towns)
str(asthma)
str(tracts2towns)
tracts2towns$id <- str_sub(tracts2towns$tract, 6,10 )
View(tracts2towns)
tracts2towns <- read.csv("data/tracts_to_towns.csv", stringsAsFactors=F)
tracts2towns$id <- str_sub(tracts2towns$tract, 6,10 )
View(tracts2towns)
asthma <- read.csv("https://data.ct.gov/api/views/javn-ujwr/rows.csv?accessType=DOWNLOAD", stringsAsFactors=F)
towntracts <- readOGR(dsn="maps", layer="census_tracts")
# creating a copy
towntracts_only <- towntracts
# turn the shapefile into a dataframe that can be worked on in R
towntracts <- fortify(towntracts, region="GEOID10")
townborders <- readOGR(dsn="maps", layer="ctgeo")
townborders_only <- townborders
townborders<- fortify(townborders, region="NAME10")
#names(asthma)[names(asthma) == 'Census.Tract'] <- 'id'
#asthma$id <- ifelse(nchar(asthma$Census.Tract) ==5, paste0("090010", asthma$Census.Tract), paste0("09009", asthma$Census.Tract))
tracts2towns <- read.csv("data/tracts_to_towns.csv", stringsAsFactors=F)
tracts2towns$id <- str_sub(tracts2towns$tract, 6,10 )
colnames(tracts2towns) <- c("id", "town", "Census.Tract")
asthma$Census.Tract <- as.character(asthma$Census.Tract)
asthma <- left_join(asthma, tracts2towns)
View(asthma)
total_map <- left_join(towntracts, asthma)
asthma$id <- as.character(asthma$id)
total_map <- left_join(towntracts, asthma)
total_map2$n <- as.numeric(total_map2$n)
tm_ct <- ggplot() +
geom_polygon(data = total_map2, aes(x=long, y=lat, group=group, fill=n), color = "black", size=0.2) +
geom_polygon(data = townborders, aes(x=long, y=lat, group=group, fill=total), color = "black", fill=NA, size=0.5) +
coord_map() +
facet_wrap(~category, ncol=2) +
scale_fill_distiller(type="seq", trans="reverse", palette = "Reds", breaks=pretty_breaks(n=10)) +
theme_nothing(legend=TRUE) +
labs(title="Asthma in Connecticut", fill="")
print(tm_ct)
View(total_map)
str(towntracts)
str(asthma)
total_map <- left_join(towntracts, asthma)
View(total_map)
library(scales)
asthma <- read.csv("https://data.ct.gov/api/views/javn-ujwr/rows.csv?accessType=DOWNLOAD", stringsAsFactors=F)
towntracts <- readOGR(dsn="maps", layer="census_tracts")
# creating a copy
towntracts_only <- towntracts
# turn the shapefile into a dataframe that can be worked on in R
towntracts <- fortify(towntracts, region="GEOID10")
townborders <- readOGR(dsn="maps", layer="ctgeo")
townborders_only <- townborders
townborders<- fortify(townborders, region="NAME10")
#names(asthma)[names(asthma) == 'Census.Tract'] <- 'id'
#asthma$id <- ifelse(nchar(asthma$Census.Tract) ==5, paste0("090010", asthma$Census.Tract), paste0("09009", asthma$Census.Tract))
tracts2towns <- read.csv("data/tracts_to_towns.csv", stringsAsFactors=F)
tracts2towns$id <- str_sub(tracts2towns$tract, 6,10 )
colnames(tracts2towns) <- c("id", "town", "Census.Tract")
asthma$Census.Tract <- as.character(asthma$Census.Tract)
asthma <- left_join(asthma, tracts2towns)
asthma$id <- as.character(asthma$id)
total_map <- left_join(towntracts, asthma)
View(total_map)
View(towntracts)
View(asthma)
asthma <- read.csv("https://data.ct.gov/api/views/javn-ujwr/rows.csv?accessType=DOWNLOAD", stringsAsFactors=F)
towntracts <- readOGR(dsn="maps", layer="census_tracts")
# creating a copy
towntracts_only <- towntracts
# turn the shapefile into a dataframe that can be worked on in R
towntracts <- fortify(towntracts, region="GEOID10")
townborders <- readOGR(dsn="maps", layer="ctgeo")
townborders_only <- townborders
townborders<- fortify(townborders, region="NAME10")
#names(asthma)[names(asthma) == 'Census.Tract'] <- 'id'
#asthma$id <- ifelse(nchar(asthma$Census.Tract) ==5, paste0("090010", asthma$Census.Tract), paste0("09009", asthma$Census.Tract))
tracts2towns <- read.csv("data/tracts_to_towns.csv", stringsAsFactors=F)
tracts2towns$id_a <- str_sub(tracts2towns$tract, 6,10 )
tracts2towns$id_b <- str_sub(tracts2towns$tract, 5,10 )
colnames(tracts2towns) <- c("id", "town", "Census.Tract")
asthma$Census.Tract <- as.character(asthma$Census.Tract)
asthma <- left_join(asthma, tracts2towns)
View(asthma)
asthma$Census.Tract <- ifelse(nchar(asthma$Census.Tract)==5, asthma$Census.Tract, str_sub(tracts2towns$tract, 2,6 ))
View(asthma)
asthma <- read.csv("https://data.ct.gov/api/views/javn-ujwr/rows.csv?accessType=DOWNLOAD", stringsAsFactors=F)
towntracts <- readOGR(dsn="maps", layer="census_tracts")
# creating a copy
towntracts_only <- towntracts
# turn the shapefile into a dataframe that can be worked on in R
towntracts <- fortify(towntracts, region="GEOID10")
townborders <- readOGR(dsn="maps", layer="ctgeo")
townborders_only <- townborders
townborders<- fortify(townborders, region="NAME10")
#names(asthma)[names(asthma) == 'Census.Tract'] <- 'id'
#asthma$id <- ifelse(nchar(asthma$Census.Tract) ==5, paste0("090010", asthma$Census.Tract), paste0("09009", asthma$Census.Tract))
tracts2towns <- read.csv("data/tracts_to_towns.csv", stringsAsFactors=F)
tracts2towns$id <- str_sub(tracts2towns$tract, 6,10 )
colnames(tracts2towns) <- c("id", "town", "Census.Tract")
asthma$Census.Tract <- as.character(asthma$Census.Tract)
asthma <- left_join(asthma, tracts2towns)
asthma$id <- as.character(asthma$id)
asthma$Census.Tract <- ifelse(nchar(asthma$Census.Tract)==5, asthma$Census.Tract, str_sub(tracts2towns$tract, 2,6 ))
total_map <- left_join(towntracts, asthma)
View(asthma)
asthma <- read.csv("https://data.ct.gov/api/views/javn-ujwr/rows.csv?accessType=DOWNLOAD", stringsAsFactors=F)
towntracts <- readOGR(dsn="maps", layer="census_tracts")
# creating a copy
towntracts_only <- towntracts
# turn the shapefile into a dataframe that can be worked on in R
towntracts <- fortify(towntracts, region="GEOID10")
townborders <- readOGR(dsn="maps", layer="ctgeo")
townborders_only <- townborders
townborders<- fortify(townborders, region="NAME10")
#names(asthma)[names(asthma) == 'Census.Tract'] <- 'id'
#asthma$id <- ifelse(nchar(asthma$Census.Tract) ==5, paste0("090010", asthma$Census.Tract), paste0("09009", asthma$Census.Tract))
tracts2towns <- read.csv("data/tracts_to_towns.csv", stringsAsFactors=F)
tracts2towns$id <- str_sub(tracts2towns$tract, 6,10 )
colnames(tracts2towns) <- c("id", "town", "Census.Tract")
asthma$Census.Tract <- as.character(asthma$Census.Tract)
asthma <- left_join(asthma, tracts2towns)
asthma$id <- as.character(asthma$id)
asthma$Census.Tract <- ifelse(nchar(asthma$Census.Tract)==5, asthma$Census.Tract, str_sub(asthma$Census.Tract, 2,6 ))
total_map <- left_join(towntracts, asthma)
View(asthma)
View(tracts2towns)
asthma$ugh <- paste(asthma$Town, asthma$Census.Tract)
tracts2towns$ugh <- paste(tracts2towns$Town, tracts2towns$Census.Tract)
View(asthma)
View(tracts2towns)
asthma <- left_join(asthma, tracts2towns, by="ugh")
View(asthma)
asthma <- read.csv("https://data.ct.gov/api/views/javn-ujwr/rows.csv?accessType=DOWNLOAD", stringsAsFactors=F)
towntracts <- readOGR(dsn="maps", layer="census_tracts")
# creating a copy
towntracts_only <- towntracts
# turn the shapefile into a dataframe that can be worked on in R
towntracts <- fortify(towntracts, region="GEOID10")
townborders <- readOGR(dsn="maps", layer="ctgeo")
townborders_only <- townborders
townborders<- fortify(townborders, region="NAME10")
#names(asthma)[names(asthma) == 'Census.Tract'] <- 'id'
#asthma$id <- ifelse(nchar(asthma$Census.Tract) ==5, paste0("090010", asthma$Census.Tract), paste0("09009", asthma$Census.Tract))
tracts2towns <- read.csv("data/tracts_to_towns.csv", stringsAsFactors=F)
tracts2towns$id <- str_sub(tracts2towns$tract, 6,10 )
colnames(tracts2towns) <- c("id", "town", "Census.Tract")
asthma$Census.Tract <- as.character(asthma$Census.Tract)
asthma$ugh <- paste(asthma$Town, asthma$Census.Tract)
tracts2towns$ugh <- paste(tracts2towns$Town, tracts2towns$Census.Tract)
asthma <- left_join(asthma, tracts2towns, by="ugh")
View(asthma)
asthma <- left_join(asthma, tracts2towns, by=ugh)
asthma <- read.csv("https://data.ct.gov/api/views/javn-ujwr/rows.csv?accessType=DOWNLOAD", stringsAsFactors=F)
towntracts <- readOGR(dsn="maps", layer="census_tracts")
# creating a copy
towntracts_only <- towntracts
# turn the shapefile into a dataframe that can be worked on in R
towntracts <- fortify(towntracts, region="GEOID10")
townborders <- readOGR(dsn="maps", layer="ctgeo")
townborders_only <- townborders
townborders<- fortify(townborders, region="NAME10")
#names(asthma)[names(asthma) == 'Census.Tract'] <- 'id'
#asthma$id <- ifelse(nchar(asthma$Census.Tract) ==5, paste0("090010", asthma$Census.Tract), paste0("09009", asthma$Census.Tract))
tracts2towns <- read.csv("data/tracts_to_towns.csv", stringsAsFactors=F)
tracts2towns$id <- str_sub(tracts2towns$tract, 6,10 )
colnames(tracts2towns) <- c("id", "town", "Census.Tract")
asthma$Census.Tract <- as.character(asthma$Census.Tract)
asthma$ugh <- paste(asthma$Town, asthma$Census.Tract)
tracts2towns$ugh <- paste(tracts2towns$Town, tracts2towns$Census.Tract)
head(asthma$ugh)
head(tracts2towns$ugh)
View(tracts2towns)
asthma <- read.csv("https://data.ct.gov/api/views/javn-ujwr/rows.csv?accessType=DOWNLOAD", stringsAsFactors=F)
towntracts <- readOGR(dsn="maps", layer="census_tracts")
# creating a copy
towntracts_only <- towntracts
# turn the shapefile into a dataframe that can be worked on in R
towntracts <- fortify(towntracts, region="GEOID10")
townborders <- readOGR(dsn="maps", layer="ctgeo")
townborders_only <- townborders
townborders<- fortify(townborders, region="NAME10")
#names(asthma)[names(asthma) == 'Census.Tract'] <- 'id'
#asthma$id <- ifelse(nchar(asthma$Census.Tract) ==5, paste0("090010", asthma$Census.Tract), paste0("09009", asthma$Census.Tract))
tracts2towns <- read.csv("data/tracts_to_towns.csv", stringsAsFactors=F)
tracts2towns$id <- str_sub(tracts2towns$tract, 6,10 )
colnames(tracts2towns) <- c("id", "town", "Census.Tract")
asthma$Census.Tract <- as.character(asthma$Census.Tract)
asthma$ugh <- paste(asthma$Town, asthma$Census.Tract)
tracts2towns$ugh <- paste(tracts2towns$town, tracts2towns$Census.Tract)
asthma <- left_join(asthma, tracts2towns, by="ugh")
View(asthma)
asthma <- read.csv("https://data.ct.gov/api/views/javn-ujwr/rows.csv?accessType=DOWNLOAD", stringsAsFactors=F)
towntracts <- readOGR(dsn="maps", layer="census_tracts")
# creating a copy
towntracts_only <- towntracts
# turn the shapefile into a dataframe that can be worked on in R
towntracts <- fortify(towntracts, region="GEOID10")
townborders <- readOGR(dsn="maps", layer="ctgeo")
townborders_only <- townborders
townborders<- fortify(townborders, region="NAME10")
#names(asthma)[names(asthma) == 'Census.Tract'] <- 'id'
#asthma$id <- ifelse(nchar(asthma$Census.Tract) ==5, paste0("090010", asthma$Census.Tract), paste0("09009", asthma$Census.Tract))
tracts2towns <- read.csv("data/tracts_to_towns.csv", stringsAsFactors=F)
tracts2towns$id <- str_sub(tracts2towns$tract, 6,10 )
colnames(tracts2towns) <- c("id", "town", "Census.Tract")
asthma$Census.Tract <- as.character(asthma$Census.Tract)
asthma$Census.Tract <- ifelse(nchar(asthma$Census.Tract)==5, asthma$Census.Tract, str_sub(asthma$Census.Tract, 2,6 ))
asthma$ugh <- paste(asthma$Town, asthma$Census.Tract)
tracts2towns$ugh <- paste(tracts2towns$town, tracts2towns$Census.Tract)
asthma <- left_join(asthma, tracts2towns, by="ugh")
View(asthma)
asthma$id <- as.character(asthma$id)
total_map <- left_join(towntracts, asthma)
total_map2 <- gather(total_map, "category", "n", 10:19)
total_map2$n <- as.numeric(total_map2$n)
tm_ct <- ggplot() +
geom_polygon(data = total_map2, aes(x=long, y=lat, group=group, fill=n), color = "black", size=0.2) +
geom_polygon(data = townborders, aes(x=long, y=lat, group=group, fill=total), color = "black", fill=NA, size=0.5) +
coord_map() +
facet_wrap(~category, ncol=2) +
scale_fill_distiller(type="seq", trans="reverse", palette = "Reds", breaks=pretty_breaks(n=10)) +
theme_nothing(legend=TRUE) +
labs(title="Asthma in Connecticut", fill="")
print(tm_ct)
View(asthma)
View(total_map2)
asthma <- read.csv("https://data.ct.gov/api/views/javn-ujwr/rows.csv?accessType=DOWNLOAD", stringsAsFactors=F)
towntracts <- readOGR(dsn="maps", layer="census_tracts")
# creating a copy
towntracts_only <- towntracts
# turn the shapefile into a dataframe that can be worked on in R
towntracts <- fortify(towntracts, region="GEOID10")
townborders <- readOGR(dsn="maps", layer="ctgeo")
townborders_only <- townborders
townborders<- fortify(townborders, region="NAME10")
#names(asthma)[names(asthma) == 'Census.Tract'] <- 'id'
#asthma$id <- ifelse(nchar(asthma$Census.Tract) ==5, paste0("090010", asthma$Census.Tract), paste0("09009", asthma$Census.Tract))
tracts2towns <- read.csv("data/tracts_to_towns.csv", stringsAsFactors=F)
tracts2towns$id <- str_sub(tracts2towns$tract, 6,10 )
colnames(tracts2towns) <- c("id", "town", "Census.Tract")
asthma$Census.Tract <- as.character(asthma$Census.Tract)
asthma$Census.Tract <- ifelse(nchar(asthma$Census.Tract)==5, asthma$Census.Tract, str_sub(asthma$Census.Tract, 2,6 ))
asthma$ugh <- paste(asthma$Town, asthma$Census.Tract)
tracts2towns$ugh <- paste(tracts2towns$town, tracts2towns$Census.Tract)
asthma <- left_join(asthma, tracts2towns, by="ugh")
asthma$id <- as.character(asthma$id)
total_map <- left_join(towntracts, asthma)
View(total_map)
View(asthma)
total_map <- left_join(towntracts, asthma, by="id")
View(total_map)
table(nchar(asthma$id))
asthma$id <- paste0("0", asthma$id)
total_map <- left_join(towntracts, asthma, by="id")
View(total_map)
total_map$Census.Tract.y <- NULL
total_map2 <- gather(total_map, "category", "n", 10:19)
View(total_map2)
total_map <- left_join(towntracts, asthma, by="id")
total_map$ugh <- NULL
total_map$town <- NULL
total_map$Census.Tract.y <- NULL
total_map2 <- gather(total_map, "category", "n", 10:19)
View(total_map2)
total_map2$n <- as.numeric(total_map2$n)
tm_ct <- ggplot() +
geom_polygon(data = total_map2, aes(x=long, y=lat, group=group, fill=n), color = "black", size=0.2) +
geom_polygon(data = townborders, aes(x=long, y=lat, group=group, fill=total), color = "black", fill=NA, size=0.5) +
coord_map() +
facet_wrap(~category, ncol=2) +
scale_fill_distiller(type="seq", trans="reverse", palette = "Reds", breaks=pretty_breaks(n=10)) +
theme_nothing(legend=TRUE) +
labs(title="Asthma in Connecticut", fill="")
print(tm_ct)
table(total_map2$Town)
town_count1 <- unique(total_map2$Town)
town_count2 <- unique(asthma$Town)
View(asthma)
asthma <- read.csv("https://data.ct.gov/api/views/javn-ujwr/rows.csv?accessType=DOWNLOAD", stringsAsFactors=F)
towntracts <- readOGR(dsn="maps", layer="census_tracts")
# creating a copy
towntracts_only <- towntracts
# turn the shapefile into a dataframe that can be worked on in R
towntracts <- fortify(towntracts, region="GEOID10")
townborders <- readOGR(dsn="maps", layer="ctgeo")
townborders_only <- townborders
townborders<- fortify(townborders, region="NAME10")
#names(asthma)[names(asthma) == 'Census.Tract'] <- 'id'
#asthma$id <- ifelse(nchar(asthma$Census.Tract) ==5, paste0("090010", asthma$Census.Tract), paste0("09009", asthma$Census.Tract))
tracts2towns <- read.csv("data/tracts_to_towns.csv", stringsAsFactors=F)
tracts2towns$id <- str_sub(tracts2towns$tract, 6,10 )
colnames(tracts2towns) <- c("id", "town", "Census.Tract")
asthma$Census.Tract <- as.character(asthma$Census.Tract)
asthma$Census.Tract <- ifelse(nchar(asthma$Census.Tract)==5, asthma$Census.Tract, str_sub(asthma$Census.Tract, 2,6 ))
asthma$ugh <- paste(asthma$Town, asthma$Census.Tract)
tracts2towns$ugh <- paste(tracts2towns$town, tracts2towns$Census.Tract)
View(tracts2towns)
View(asthma)
asthma <- left_join(asthma, tracts2towns, by="ugh")
View(asthma)
asthma <- read.csv("https://data.ct.gov/api/views/javn-ujwr/rows.csv?accessType=DOWNLOAD", stringsAsFactors=F)
towntracts <- readOGR(dsn="maps", layer="census_tracts")
# creating a copy
towntracts_only <- towntracts
# turn the shapefile into a dataframe that can be worked on in R
towntracts <- fortify(towntracts, region="GEOID10")
townborders <- readOGR(dsn="maps", layer="ctgeo")
townborders_only <- townborders
townborders<- fortify(townborders, region="NAME10")
#names(asthma)[names(asthma) == 'Census.Tract'] <- 'id'
#asthma$id <- ifelse(nchar(asthma$Census.Tract) ==5, paste0("090010", asthma$Census.Tract), paste0("09009", asthma$Census.Tract))
tracts2towns <- read.csv("data/tracts_to_towns.csv", stringsAsFactors=F)
tracts2towns$id <- str_sub(tracts2towns$tract, 6,10 )
colnames(tracts2towns) <- c("id", "town", "Census.Tract")
asthma$Census.Tract <- as.character(asthma$Census.Tract)
asthma$Census.Tract <- ifelse(nchar(asthma$Census.Tract)==5, asthma$Census.Tract, str_sub(asthma$Census.Tract, 2,6 ))
asthma$ugh <- paste(asthma$Town, asthma$Census.Tract)
tracts2towns$ugh <- paste(tracts2towns$town, tracts2towns$Census.Tract)
test <- subset(asthma, ugh=="Sterling 08100")
test2 <- subset(tracts2towns, ugh=="Sterling 08100")
tracts2towns$ugh <- str_trim(tracts2towns$ugh)
test2 <- subset(tracts2towns, ugh=="Sterling 08100")
asthma <- read.csv("https://data.ct.gov/api/views/javn-ujwr/rows.csv?accessType=DOWNLOAD", stringsAsFactors=F)
towntracts <- readOGR(dsn="maps", layer="census_tracts")
# creating a copy
towntracts_only <- towntracts
# turn the shapefile into a dataframe that can be worked on in R
towntracts <- fortify(towntracts, region="GEOID10")
townborders <- readOGR(dsn="maps", layer="ctgeo")
townborders_only <- townborders
townborders<- fortify(townborders, region="NAME10")
#names(asthma)[names(asthma) == 'Census.Tract'] <- 'id'
#asthma$id <- ifelse(nchar(asthma$Census.Tract) ==5, paste0("090010", asthma$Census.Tract), paste0("09009", asthma$Census.Tract))
tracts2towns <- read.csv("data/tracts_to_towns.csv", stringsAsFactors=F)
tracts2towns$id <- str_sub(tracts2towns$tract, 6,10 )
colnames(tracts2towns) <- c("id", "town", "Census.Tract")
asthma$Census.Tract <- as.character(asthma$Census.Tract)
asthma$Census.Tract <- ifelse(nchar(asthma$Census.Tract)==5, asthma$Census.Tract, str_sub(asthma$Census.Tract, 2,6 ))
asthma$ugh <- paste(asthma$Town, asthma$Census.Tract)
tracts2towns$ugh <- paste(tracts2towns$town, tracts2towns$Census.Tract)
tracts2towns$ugh <- str_trim(tracts2towns$ugh)
asthma <- left_join(asthma, tracts2towns, by="ugh")
asthma$id <- as.character(asthma$id)
asthma$id <- paste0("0", asthma$id)
total_map <- left_join(towntracts, asthma, by="id")
total_map$ugh <- NULL
total_map$town <- NULL
total_map$Census.Tract.y <- NULL
total_map2 <- gather(total_map, "category", "n", 10:19)
total_map2$n <- as.numeric(total_map2$n)
tm_ct <- ggplot() +
geom_polygon(data = total_map2, aes(x=long, y=lat, group=group, fill=n), color = "black", size=0.2) +
geom_polygon(data = townborders, aes(x=long, y=lat, group=group, fill=total), color = "black", fill=NA, size=0.5) +
coord_map() +
facet_wrap(~category, ncol=1) +
scale_fill_distiller(type="seq", trans="reverse", palette = "Reds", breaks=pretty_breaks(n=10)) +
theme_nothing(legend=TRUE) +
labs(title="Asthma in Connecticut", fill="")
print(tm_ct)
unique(total_map2$Town)
count(unique(total_map2$Town))
length(unique(total_map2$Town))
length(unique(asthma$town))
