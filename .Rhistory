print(tm_ct)
View(asthma)
View(total_map2)
asthma <- read.csv("https://data.ct.gov/api/views/javn-ujwr/rows.csv?accessType=DOWNLOAD", stringsAsFactors=F)
towntracts <- readOGR(dsn="maps", layer="census_tracts")
# creating a copy
towntracts_only <- towntracts
# turn the shapefile into a dataframe that can be worked on in R
towntracts <- fortify(towntracts, region="GEOID10")
townborders <- readOGR(dsn="maps", layer="ctgeo")
townborders_only <- townborders
townborders<- fortify(townborders, region="NAME10")
#names(asthma)[names(asthma) == 'Census.Tract'] <- 'id'
#asthma$id <- ifelse(nchar(asthma$Census.Tract) ==5, paste0("090010", asthma$Census.Tract), paste0("09009", asthma$Census.Tract))
tracts2towns <- read.csv("data/tracts_to_towns.csv", stringsAsFactors=F)
tracts2towns$id <- str_sub(tracts2towns$tract, 6,10 )
colnames(tracts2towns) <- c("id", "town", "Census.Tract")
asthma$Census.Tract <- as.character(asthma$Census.Tract)
asthma$Census.Tract <- ifelse(nchar(asthma$Census.Tract)==5, asthma$Census.Tract, str_sub(asthma$Census.Tract, 2,6 ))
asthma$ugh <- paste(asthma$Town, asthma$Census.Tract)
tracts2towns$ugh <- paste(tracts2towns$town, tracts2towns$Census.Tract)
asthma <- left_join(asthma, tracts2towns, by="ugh")
asthma$id <- as.character(asthma$id)
total_map <- left_join(towntracts, asthma)
View(total_map)
View(asthma)
total_map <- left_join(towntracts, asthma, by="id")
View(total_map)
table(nchar(asthma$id))
asthma$id <- paste0("0", asthma$id)
total_map <- left_join(towntracts, asthma, by="id")
View(total_map)
total_map$Census.Tract.y <- NULL
total_map2 <- gather(total_map, "category", "n", 10:19)
View(total_map2)
total_map <- left_join(towntracts, asthma, by="id")
total_map$ugh <- NULL
total_map$town <- NULL
total_map$Census.Tract.y <- NULL
total_map2 <- gather(total_map, "category", "n", 10:19)
View(total_map2)
total_map2$n <- as.numeric(total_map2$n)
tm_ct <- ggplot() +
geom_polygon(data = total_map2, aes(x=long, y=lat, group=group, fill=n), color = "black", size=0.2) +
geom_polygon(data = townborders, aes(x=long, y=lat, group=group, fill=total), color = "black", fill=NA, size=0.5) +
coord_map() +
facet_wrap(~category, ncol=2) +
scale_fill_distiller(type="seq", trans="reverse", palette = "Reds", breaks=pretty_breaks(n=10)) +
theme_nothing(legend=TRUE) +
labs(title="Asthma in Connecticut", fill="")
print(tm_ct)
table(total_map2$Town)
town_count1 <- unique(total_map2$Town)
town_count2 <- unique(asthma$Town)
View(asthma)
asthma <- read.csv("https://data.ct.gov/api/views/javn-ujwr/rows.csv?accessType=DOWNLOAD", stringsAsFactors=F)
towntracts <- readOGR(dsn="maps", layer="census_tracts")
# creating a copy
towntracts_only <- towntracts
# turn the shapefile into a dataframe that can be worked on in R
towntracts <- fortify(towntracts, region="GEOID10")
townborders <- readOGR(dsn="maps", layer="ctgeo")
townborders_only <- townborders
townborders<- fortify(townborders, region="NAME10")
#names(asthma)[names(asthma) == 'Census.Tract'] <- 'id'
#asthma$id <- ifelse(nchar(asthma$Census.Tract) ==5, paste0("090010", asthma$Census.Tract), paste0("09009", asthma$Census.Tract))
tracts2towns <- read.csv("data/tracts_to_towns.csv", stringsAsFactors=F)
tracts2towns$id <- str_sub(tracts2towns$tract, 6,10 )
colnames(tracts2towns) <- c("id", "town", "Census.Tract")
asthma$Census.Tract <- as.character(asthma$Census.Tract)
asthma$Census.Tract <- ifelse(nchar(asthma$Census.Tract)==5, asthma$Census.Tract, str_sub(asthma$Census.Tract, 2,6 ))
asthma$ugh <- paste(asthma$Town, asthma$Census.Tract)
tracts2towns$ugh <- paste(tracts2towns$town, tracts2towns$Census.Tract)
View(tracts2towns)
View(asthma)
asthma <- left_join(asthma, tracts2towns, by="ugh")
View(asthma)
asthma <- read.csv("https://data.ct.gov/api/views/javn-ujwr/rows.csv?accessType=DOWNLOAD", stringsAsFactors=F)
towntracts <- readOGR(dsn="maps", layer="census_tracts")
# creating a copy
towntracts_only <- towntracts
# turn the shapefile into a dataframe that can be worked on in R
towntracts <- fortify(towntracts, region="GEOID10")
townborders <- readOGR(dsn="maps", layer="ctgeo")
townborders_only <- townborders
townborders<- fortify(townborders, region="NAME10")
#names(asthma)[names(asthma) == 'Census.Tract'] <- 'id'
#asthma$id <- ifelse(nchar(asthma$Census.Tract) ==5, paste0("090010", asthma$Census.Tract), paste0("09009", asthma$Census.Tract))
tracts2towns <- read.csv("data/tracts_to_towns.csv", stringsAsFactors=F)
tracts2towns$id <- str_sub(tracts2towns$tract, 6,10 )
colnames(tracts2towns) <- c("id", "town", "Census.Tract")
asthma$Census.Tract <- as.character(asthma$Census.Tract)
asthma$Census.Tract <- ifelse(nchar(asthma$Census.Tract)==5, asthma$Census.Tract, str_sub(asthma$Census.Tract, 2,6 ))
asthma$ugh <- paste(asthma$Town, asthma$Census.Tract)
tracts2towns$ugh <- paste(tracts2towns$town, tracts2towns$Census.Tract)
test <- subset(asthma, ugh=="Sterling 08100")
test2 <- subset(tracts2towns, ugh=="Sterling 08100")
tracts2towns$ugh <- str_trim(tracts2towns$ugh)
test2 <- subset(tracts2towns, ugh=="Sterling 08100")
asthma <- read.csv("https://data.ct.gov/api/views/javn-ujwr/rows.csv?accessType=DOWNLOAD", stringsAsFactors=F)
towntracts <- readOGR(dsn="maps", layer="census_tracts")
# creating a copy
towntracts_only <- towntracts
# turn the shapefile into a dataframe that can be worked on in R
towntracts <- fortify(towntracts, region="GEOID10")
townborders <- readOGR(dsn="maps", layer="ctgeo")
townborders_only <- townborders
townborders<- fortify(townborders, region="NAME10")
#names(asthma)[names(asthma) == 'Census.Tract'] <- 'id'
#asthma$id <- ifelse(nchar(asthma$Census.Tract) ==5, paste0("090010", asthma$Census.Tract), paste0("09009", asthma$Census.Tract))
tracts2towns <- read.csv("data/tracts_to_towns.csv", stringsAsFactors=F)
tracts2towns$id <- str_sub(tracts2towns$tract, 6,10 )
colnames(tracts2towns) <- c("id", "town", "Census.Tract")
asthma$Census.Tract <- as.character(asthma$Census.Tract)
asthma$Census.Tract <- ifelse(nchar(asthma$Census.Tract)==5, asthma$Census.Tract, str_sub(asthma$Census.Tract, 2,6 ))
asthma$ugh <- paste(asthma$Town, asthma$Census.Tract)
tracts2towns$ugh <- paste(tracts2towns$town, tracts2towns$Census.Tract)
tracts2towns$ugh <- str_trim(tracts2towns$ugh)
asthma <- left_join(asthma, tracts2towns, by="ugh")
asthma$id <- as.character(asthma$id)
asthma$id <- paste0("0", asthma$id)
total_map <- left_join(towntracts, asthma, by="id")
total_map$ugh <- NULL
total_map$town <- NULL
total_map$Census.Tract.y <- NULL
total_map2 <- gather(total_map, "category", "n", 10:19)
total_map2$n <- as.numeric(total_map2$n)
tm_ct <- ggplot() +
geom_polygon(data = total_map2, aes(x=long, y=lat, group=group, fill=n), color = "black", size=0.2) +
geom_polygon(data = townborders, aes(x=long, y=lat, group=group, fill=total), color = "black", fill=NA, size=0.5) +
coord_map() +
facet_wrap(~category, ncol=1) +
scale_fill_distiller(type="seq", trans="reverse", palette = "Reds", breaks=pretty_breaks(n=10)) +
theme_nothing(legend=TRUE) +
labs(title="Asthma in Connecticut", fill="")
print(tm_ct)
unique(total_map2$Town)
count(unique(total_map2$Town))
length(unique(total_map2$Town))
length(unique(asthma$town))
library(readxl)
pol <- read_excel("data/2011nata_national_resp_by_tract_poll.xlsx", sheet=1)
instsall.packages("readxl")
install.packages("readxl")
library(readxl)
pol <- read_excel("data/2011nata_national_resp_by_tract_poll.xlsx", sheet=1)
library(readxl)
pol <- read_excel("data/2011nata_national_resp_by_tract_poll.xlsx", sheet=1)
View(pol)
View(pol)
pol2 <- read_excel("data/2011nata_national_resp_by_tract_source.xlsx", sheet=1)
View(pol2)
ct_pol <- subset(pol, State=="CT")
View(ct_pol)
library(dplyr)
str(ct_pol)
ct_pol <- select(ct_pol, Tract, 'Point (includes railyards) Respiratory HI' )
ct_pol <- select(ct_pol, Tract, `Point (includes railyards) Respiratory HI` )
View(ct_pol)
pol <- read_excel("data/2011nata_national_resp_by_tract_poll.xlsx", sheet=1)
ct_pol <- subset(pol, State=="CT")
ct_pol <- ct_pol %>%
select(Tract, `Point (includes railyards) Respiratory HI`, `Total Respiratory HI`)
View(ct_pol)
ct_pol <- subset(pol, State=="CT")
ct_pol <- ct_pol %>%
select(Tract, `Point (includes railyards) Respiratory HI`, `Total Respiratory HI`) %>%
filter(Tract!="00000000000")
View(ct_pol)
library(tidyr)
library(dplyr)
library(ggmap)
library(knitr)
library(stringr)
library(ggplot2)
library(rgdal)
library(sp)
library(maptools)
library(scales)
asthma <- read.csv("https://data.ct.gov/api/views/javn-ujwr/rows.csv?accessType=DOWNLOAD", stringsAsFactors=F)
towntracts <- readOGR(dsn="maps", layer="census_tracts")
# creating a copy
towntracts_only <- towntracts
# turn the shapefile into a dataframe that can be worked on in R
towntracts <- fortify(towntracts, region="GEOID10")
townborders <- readOGR(dsn="maps", layer="ctgeo")
townborders_only <- townborders
townborders<- fortify(townborders, region="NAME10")
#names(asthma)[names(asthma) == 'Census.Tract'] <- 'id'
#asthma$id <- ifelse(nchar(asthma$Census.Tract) ==5, paste0("090010", asthma$Census.Tract), paste0("09009", asthma$Census.Tract))
tracts2towns <- read.csv("data/tracts_to_towns.csv", stringsAsFactors=F)
tracts2towns$id <- str_sub(tracts2towns$tract, 6,10 )
colnames(tracts2towns) <- c("id", "town", "Census.Tract")
asthma$Census.Tract <- as.character(asthma$Census.Tract)
asthma <- left_join(asthma, tracts2towns)
asthma$id <- as.character(asthma$id)
total_map <- left_join(towntracts, asthma)
total_map2 <- gather(total_map, "category", "n", 10:19)
total_map2$n <- as.numeric(total_map2$n)
View(asthma)
colnames(ct_pol) <- c("id", "point", "total.respiratory")
asthma2 <- left_join(asthma, ct_pol)
View(asthma)
View(asthma2)
asthma$id <- paste0("0", asthma$id)
asthma2 <- left_join(asthma, ct_pol)
View(asthma2)
View(total_map)
asthma <- read.csv("https://data.ct.gov/api/views/javn-ujwr/rows.csv?accessType=DOWNLOAD", stringsAsFactors=F)
towntracts <- readOGR(dsn="maps", layer="census_tracts")
# creating a copy
towntracts_only <- towntracts
# turn the shapefile into a dataframe that can be worked on in R
towntracts <- fortify(towntracts, region="GEOID10")
townborders <- readOGR(dsn="maps", layer="ctgeo")
townborders_only <- townborders
townborders<- fortify(townborders, region="NAME10")
#names(asthma)[names(asthma) == 'Census.Tract'] <- 'id'
#asthma$id <- ifelse(nchar(asthma$Census.Tract) ==5, paste0("090010", asthma$Census.Tract), paste0("09009", asthma$Census.Tract))
tracts2towns <- read.csv("data/tracts_to_towns.csv", stringsAsFactors=F)
tracts2towns$id <- str_sub(tracts2towns$tract, 6,10 )
colnames(tracts2towns) <- c("id", "town", "Census.Tract")
asthma$Census.Tract <- as.character(asthma$Census.Tract)
asthma <- left_join(asthma, tracts2towns)
asthma$id <- as.character(asthma$id)
total_map <- left_join(towntracts, asthma)
View(total_map)
asthma <- read.csv("https://data.ct.gov/api/views/javn-ujwr/rows.csv?accessType=DOWNLOAD", stringsAsFactors=F)
towntracts <- readOGR(dsn="maps", layer="census_tracts")
# creating a copy
towntracts_only <- towntracts
# turn the shapefile into a dataframe that can be worked on in R
towntracts <- fortify(towntracts, region="GEOID10")
townborders <- readOGR(dsn="maps", layer="ctgeo")
townborders_only <- townborders
townborders<- fortify(townborders, region="NAME10")
#names(asthma)[names(asthma) == 'Census.Tract'] <- 'id'
#asthma$id <- ifelse(nchar(asthma$Census.Tract) ==5, paste0("090010", asthma$Census.Tract), paste0("09009", asthma$Census.Tract))
tracts2towns <- read.csv("data/tracts_to_towns.csv", stringsAsFactors=F)
tracts2towns$id <- str_sub(tracts2towns$tract, 6,10 )
colnames(tracts2towns) <- c("id", "town", "Census.Tract")
asthma$Census.Tract <- as.character(asthma$Census.Tract)
asthma$Census.Tract <- ifelse(nchar(asthma$Census.Tract)==5, asthma$Census.Tract, str_sub(asthma$Census.Tract, 2,6 ))
asthma$ugh <- paste(asthma$Town, asthma$Census.Tract)
tracts2towns$ugh <- paste(tracts2towns$town, tracts2towns$Census.Tract)
tracts2towns$ugh <- str_trim(tracts2towns$ugh)
asthma <- left_join(asthma, tracts2towns, by="ugh")
asthma$id <- as.character(asthma$id)
asthma$id <- paste0("0", asthma$id)
total_map <- left_join(towntracts, asthma, by="id")
total_map$ugh <- NULL
total_map$town <- NULL
total_map$Census.Tract.y <- NULL
total_map2 <- gather(total_map, "category", "n", 10:19)
total_map2$n <- as.numeric(total_map2$n)
View(total_map)
total_map3 <- total_map[unique(total_map$id),]
View(total_map3)
total_map3 <- total_map[!duplicated(total_map$id),]
View(total_map3)
total_map3 <- left_join(total_map3, ct_pol)
View(total_map3)
str(total_map3)
total_map3$Number.of.Cases...19.Years.Old <- as.numeric(total_map3$Number.of.Cases...19.Years.Old)
total_map3$Total.Number.of.Cases <- as.numeric(total_map3$Total.Number.of.Cases)
total_map3$Total.Rate.per.10.000 <- as.numeric(total_map3$Total.Rate.per.10.000)
total_map3$Number.of.Cases...19.Years.Old <- as.numeric(total_map3$Number.of.Cases...19.Years.Old)
total_map3$Rate.per.10.000....19.Years.Old <- as.numeric(total_map3$Rate.per.10.000....19.Years.Old)
total_map3$Number.of.Cases...20.Years.Old <- as.numeric(total_map3$Number.of.Cases...20.Years.Old)
total_map3$Rate.per.10.000...20.Years.Old <- as.numeric(total_map3$Rate.per.10.000...20.Years.Old)
?cor
cor(total_map3$Total.Number.of.Cases, total_map3$point, use="complete.obs")
cor(total_map3$Total.Number.of.Cases, total_map3$total.respiratory, use="complete.obs")
cor(total_map3$Total.Rate.per.10.000, total_map3$point, use="complete.obs")
cor(total_map3$Total.Rate.per.10.000, total_map3$total.respiratory, use="complete.obs")
cor(total_map3$Number.of.Cases...19.Years.Old, total_map3$point, use="complete.obs")
cor(total_map3$Number.of.Cases...19.Years.Old, total_map3$total.respiratory, use="complete.obs")
cor(total_map3$Rate.per.10.000....19.Years.Old, total_map3$point, use="complete.obs")
cor(total_map3$Rate.per.10.000....19.Years.Old, total_map3$total.respiratory, use="complete.obs")
cor(total_map3$Number.of.Cases...20.Years.Old, total_map3$point, use="complete.obs")
cor(total_map3$Number.of.Cases...20.Years.Old, total_map3$total.respiratory, use="complete.obs")
cor(total_map3$Rate.per.10.000...20.Years.Old, total_map3$point, use="complete.obs")
cor(total_map3$Rate.per.10.000...20.Years.Old, total_map3$total.respiratory, use="complete.obs")
write.csv(total_map3, "total_map3.csv")
View(asthma)
View(asthma)
library(tidyr)
library(dplyr)
library(ggmap)
library(knitr)
library(stringr)
library(ggplot2)
library(rgdal)
library(sp)
library(maptools)
library(scales)
library(readxl)
asthma <- read.csv("https://data.ct.gov/api/views/javn-ujwr/rows.csv?accessType=DOWNLOAD", stringsAsFactors=F)
towntracts <- readOGR(dsn="maps", layer="census_tracts")
# creating a copy
towntracts_only <- towntracts
# turn the shapefile into a dataframe that can be worked on in R
towntracts <- fortify(towntracts, region="GEOID10")
townborders <- readOGR(dsn="maps", layer="ctgeo")
townborders_only <- townborders
townborders<- fortify(townborders, region="NAME10")
#names(asthma)[names(asthma) == 'Census.Tract'] <- 'id'
#asthma$id <- ifelse(nchar(asthma$Census.Tract) ==5, paste0("090010", asthma$Census.Tract), paste0("09009", asthma$Census.Tract))
tracts2towns <- read.csv("data/tracts_to_towns.csv", stringsAsFactors=F)
tracts2towns$id <- str_sub(tracts2towns$tract, 6,10 )
colnames(tracts2towns) <- c("id", "town", "Census.Tract")
asthma$Census.Tract <- as.character(asthma$Census.Tract)
asthma$Census.Tract <- ifelse(nchar(asthma$Census.Tract)==5, asthma$Census.Tract, str_sub(asthma$Census.Tract, 2,6 ))
asthma$ugh <- paste(asthma$Town, asthma$Census.Tract)
tracts2towns$ugh <- paste(tracts2towns$town, tracts2towns$Census.Tract)
tracts2towns$ugh <- str_trim(tracts2towns$ugh)
asthma <- left_join(asthma, tracts2towns, by="ugh")
asthma$id <- as.character(asthma$id)
asthma$id <- paste0("0", asthma$id)
total_map <- left_join(towntracts, asthma, by="id")
total_map$ugh <- NULL
total_map$town <- NULL
total_map$Census.Tract.y <- NULL
total_map2 <- gather(total_map, "category", "n", 10:19)
total_map2$n <- as.numeric(total_map2$n)
pol <- read_excel("data/2011nata_national_resp_by_tract_poll.xlsx", sheet=1)
pol2 <- read_excel("data/2011nata_national_resp_by_tract_source.xlsx", sheet=1)
ct_pol <- subset(pol, State=="CT")
ct_pol <- ct_pol %>%
select(Tract, `Point (includes railyards) Respiratory HI`, `Total Respiratory HI`) %>%
filter(Tract!="00000000000")
colnames(ct_pol) <- c("id", "point", "total.respiratory")
total_map3 <- total_map[!duplicated(total_map$id),]
total_map3 <- left_join(total_map3, ct_pol)
View(total_map)
View(total_map2)
total_map3$Total.Number.of.Cases <- as.numeric(total_map3$Total.Number.of.Cases)
total_map3$Total.Rate.per.10.000 <- as.numeric(total_map3$Total.Rate.per.10.000)
total_map3$Number.of.Cases...19.Years.Old <- as.numeric(total_map3$Number.of.Cases...19.Years.Old)
total_map3$Rate.per.10.000....19.Years.Old <- as.numeric(total_map3$Rate.per.10.000....19.Years.Old)
total_map3$Number.of.Cases...20.Years.Old <- as.numeric(total_map3$Number.of.Cases...20.Years.Old)
total_map3$Rate.per.10.000...20.Years.Old <- as.numeric(total_map3$Rate.per.10.000...20.Years.Old)
tm_ct <- ggplot() +
geom_polygon(data = total_map3, aes(x=long, y=lat, group=group, fill=n), color = "black", size=0.2) +
geom_polygon(data = townborders, aes(x=long, y=lat, group=group, fill=total), color = "black", fill=NA, size=0.5) +
coord_map() +
facet_wrap(~category, ncol=1) +
scale_fill_distiller(type="seq", trans="reverse", palette = "Reds", breaks=pretty_breaks(n=10)) +
theme_nothing(legend=TRUE) +
labs(title="Asthma and emissions in Connecticut", fill="")
print(tm_ct)
head(total_map3)
head(total_map2)
total_map3 <- gather(total_map3, "category", "n", 10:19)
total_map3$n <- as.numeric(total_map3$n)
View(total_map3)
total_map3 <- total_map[!duplicated(total_map$id),]
total_map3 <- left_join(total_map3, ct_pol)
total_map3$Total.Number.of.Cases <- as.numeric(total_map3$Total.Number.of.Cases)
total_map3$Total.Rate.per.10.000 <- as.numeric(total_map3$Total.Rate.per.10.000)
total_map3$Number.of.Cases...19.Years.Old <- as.numeric(total_map3$Number.of.Cases...19.Years.Old)
total_map3$Rate.per.10.000....19.Years.Old <- as.numeric(total_map3$Rate.per.10.000....19.Years.Old)
total_map3$Number.of.Cases...20.Years.Old <- as.numeric(total_map3$Number.of.Cases...20.Years.Old)
total_map3$Rate.per.10.000...20.Years.Old <- as.numeric(total_map3$Rate.per.10.000...20.Years.Old)
total_map3 <- gather(total_map3, "category", "n", 10:21)
total_map3$n <- as.numeric(total_map3$n)
View(total_map3)
tm_ct <- ggplot() +
geom_polygon(data = total_map3, aes(x=long, y=lat, group=group, fill=n), color = "black", size=0.2) +
geom_polygon(data = townborders, aes(x=long, y=lat, group=group, fill=total), color = "black", fill=NA, size=0.5) +
coord_map() +
facet_wrap(~category, ncol=1) +
scale_fill_distiller(type="seq", trans="reverse", palette = "Reds", breaks=pretty_breaks(n=10)) +
theme_nothing(legend=TRUE) +
labs(title="Asthma and emissions in Connecticut", fill="")
print(tm_ct)
asthma <- read.csv("https://data.ct.gov/api/views/javn-ujwr/rows.csv?accessType=DOWNLOAD", stringsAsFactors=F)
towntracts <- readOGR(dsn="maps", layer="census_tracts")
# creating a copy
towntracts_only <- towntracts
# turn the shapefile into a dataframe that can be worked on in R
towntracts <- fortify(towntracts, region="GEOID10")
townborders <- readOGR(dsn="maps", layer="ctgeo")
townborders_only <- townborders
townborders<- fortify(townborders, region="NAME10")
#names(asthma)[names(asthma) == 'Census.Tract'] <- 'id'
#asthma$id <- ifelse(nchar(asthma$Census.Tract) ==5, paste0("090010", asthma$Census.Tract), paste0("09009", asthma$Census.Tract))
tracts2towns <- read.csv("data/tracts_to_towns.csv", stringsAsFactors=F)
tracts2towns$id <- str_sub(tracts2towns$tract, 6,10 )
colnames(tracts2towns) <- c("id", "town", "Census.Tract")
asthma$Census.Tract <- as.character(asthma$Census.Tract)
asthma$Census.Tract <- ifelse(nchar(asthma$Census.Tract)==5, asthma$Census.Tract, str_sub(asthma$Census.Tract, 2,6 ))
asthma$ugh <- paste(asthma$Town, asthma$Census.Tract)
tracts2towns$ugh <- paste(tracts2towns$town, tracts2towns$Census.Tract)
tracts2towns$ugh <- str_trim(tracts2towns$ugh)
asthma <- left_join(asthma, tracts2towns, by="ugh")
asthma$id <- as.character(asthma$id)
asthma$id <- paste0("0", asthma$id)
total_map <- left_join(towntracts, asthma, by="id")
total_map$ugh <- NULL
total_map$town <- NULL
total_map$Census.Tract.y <- NULL
total_map2 <- gather(total_map, "category", "n", 10:19)
total_map2$n <- as.numeric(total_map2$n)
pol <- read_excel("data/2011nata_national_resp_by_tract_poll.xlsx", sheet=1)
pol2 <- read_excel("data/2011nata_national_resp_by_tract_source.xlsx", sheet=1)
ct_pol <- subset(pol, State=="CT")
ct_pol <- ct_pol %>%
select(Tract, `Point (includes railyards) Respiratory HI`, `Total Respiratory HI`) %>%
filter(Tract!="00000000000")
colnames(ct_pol) <- c("id", "point", "total.respiratory")
total_map3 <- total_map[!duplicated(total_map$id),]
total_map3 <- left_join(total_map3, ct_pol)
total_map3$Total.Number.of.Cases <- as.numeric(total_map3$Total.Number.of.Cases)
total_map3$Total.Rate.per.10.000 <- as.numeric(total_map3$Total.Rate.per.10.000)
total_map3$Number.of.Cases...19.Years.Old <- as.numeric(total_map3$Number.of.Cases...19.Years.Old)
total_map3$Rate.per.10.000....19.Years.Old <- as.numeric(total_map3$Rate.per.10.000....19.Years.Old)
total_map3$Number.of.Cases...20.Years.Old <- as.numeric(total_map3$Number.of.Cases...20.Years.Old)
total_map3$Rate.per.10.000...20.Years.Old <- as.numeric(total_map3$Rate.per.10.000...20.Years.Old)
total_map3 <- gather(total_map3, "category", "n", 10:21)
total_map3$n <- as.numeric(total_map3$n)
tm_ct <- ggplot() +
geom_polygon(data = total_map3, aes(x=long, y=lat, group=group, fill=n), color = "black", size=0.2) +
geom_polygon(data = townborders, aes(x=long, y=lat, group=group, fill=total), color = "black", fill=NA, size=0.5) +
coord_map() +
facet_wrap(~category, ncol=1) +
scale_fill_distiller(type="seq", trans="reverse", palette = "Reds", breaks=pretty_breaks(n=10)) +
theme_nothing(legend=TRUE) +
labs(title="Asthma and emissions in Connecticut", fill="")
print(tm_ct)
View(total_map3)
table(total_map3$category)
total_map3 <- filter(total_map3, category=="point" | category=="total.respitory")
pointtable(total_map3$category)
table(total_map3$category)
pol <- read_excel("data/2011nata_national_resp_by_tract_poll.xlsx", sheet=1)
pol2 <- read_excel("data/2011nata_national_resp_by_tract_source.xlsx", sheet=1)
ct_pol <- subset(pol, State=="CT")
ct_pol <- ct_pol %>%
select(Tract, `Point (includes railyards) Respiratory HI`, `Total Respiratory HI`) %>%
filter(Tract!="00000000000")
colnames(ct_pol) <- c("id", "point", "total.respiratory")
total_map3 <- total_map[!duplicated(total_map$id),]
total_map3 <- left_join(total_map3, ct_pol)
total_map3$Total.Number.of.Cases <- as.numeric(total_map3$Total.Number.of.Cases)
total_map3$Total.Rate.per.10.000 <- as.numeric(total_map3$Total.Rate.per.10.000)
total_map3$Number.of.Cases...19.Years.Old <- as.numeric(total_map3$Number.of.Cases...19.Years.Old)
total_map3$Rate.per.10.000....19.Years.Old <- as.numeric(total_map3$Rate.per.10.000....19.Years.Old)
total_map3$Number.of.Cases...20.Years.Old <- as.numeric(total_map3$Number.of.Cases...20.Years.Old)
total_map3$Rate.per.10.000...20.Years.Old <- as.numeric(total_map3$Rate.per.10.000...20.Years.Old)
total_map3 <- gather(total_map3, "category", "n", 10:21)
total_map3$n <- as.numeric(total_map3$n)
total_map3 <- filter(total_map3, category=="point" | category=="total.respiratory")
tm_ct <- ggplot() +
geom_polygon(data = total_map3, aes(x=long, y=lat, group=group, fill=n), color = "black", size=0.2) +
geom_polygon(data = townborders, aes(x=long, y=lat, group=group, fill=total), color = "black", fill=NA, size=0.5) +
coord_map() +
facet_wrap(~category, ncol=1) +
scale_fill_distiller(type="seq", trans="reverse", palette = "Reds", breaks=pretty_breaks(n=10)) +
theme_nothing(legend=TRUE) +
labs(title="Emissions in Connecticut", fill="")
print(tm_ct)
str(total_map3)
range(total_map3$n)
max(total_map3$n)
total_map3$n
tm_ct <- ggplot() +
geom_polygon(data = total_map3, aes(x=long, y=lat, group=group, fill=n), color = "black", size=0.2) +
coord_map() +
facet_wrap(~category, ncol=1) +
scale_fill_distiller(type="seq", trans="reverse", palette = "Reds", breaks=pretty_breaks(n=10)) +
theme_nothing(legend=TRUE) +
labs(title="Emissions in Connecticut", fill="")
print(tm_ct)
str(total_map3)
str(total_map2)
max(total_map3$n)
max(total_map3$n, na.rm=T)
total_map3 <- subset(total_map3, !is.na(n))
tm_ct <- ggplot() +
geom_polygon(data = total_map3, aes(x=long, y=lat, group=group, fill=n), color = "black", size=0.2) +
geom_polygon(data = townborders, aes(x=long, y=lat, group=group, fill=total), color = "black", fill=NA, size=0.5) +
coord_map() +
facet_wrap(~category, ncol=1) +
scale_fill_distiller(type="seq", trans="reverse", palette = "Reds", breaks=pretty_breaks(n=10)) +
theme_nothing(legend=TRUE) +
labs(title="Emissions in Connecticut", fill="")
print(tm_ct)
pol <- read_excel("data/2011nata_national_resp_by_tract_poll.xlsx", sheet=1)
pol2 <- read_excel("data/2011nata_national_resp_by_tract_source.xlsx", sheet=1)
ct_pol <- subset(pol, State=="CT")
ct_pol <- ct_pol %>%
select(Tract, `Point (includes railyards) Respiratory HI`, `Total Respiratory HI`) %>%
filter(Tract!="00000000000")
colnames(ct_pol) <- c("id", "point", "total.respiratory")
total_map <- left_join(towntracts, ct_pol, by="id")
total_map$ugh <- NULL
total_map$town <- NULL
total_map$Census.Tract.y <- NULL
View(total_map2)
View(total_map)
total_map2 <- gather(total_map, "category", "n", 8:9)
total_map2$n <- as.numeric(total_map2$n)
tm_ct <- ggplot() +
geom_polygon(data = total_map2, aes(x=long, y=lat, group=group, fill=n), color = "black", size=0.2) +
geom_polygon(data = townborders, aes(x=long, y=lat, group=group, fill=total), color = "black", fill=NA, size=0.5) +
coord_map() +
facet_wrap(~category, ncol=1) +
scale_fill_distiller(type="seq", trans="reverse", palette = "Reds", breaks=pretty_breaks(n=10)) +
theme_nothing(legend=TRUE) +
labs(title="Emissions in Connecticut", fill="")
print(tm_ct)
